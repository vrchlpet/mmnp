/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReferenceEditorPanel.java
 *
 * Created on 8.4.2011, 15:36:00
 */

package org.cvut.vrchlpet.MEditor.dialogs;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JDialog;
import org.cvut.vrchlpet.MController.IMasterController;
import org.cvut.vrchlpet.MController.managers.IReferenceManager;
import org.cvut.vrchlpet.MCore.core.Reference;
import org.cvut.vrchlpet.MCore.core.Relation;

/**
 *
 * @author Vrchli
 */
public class ReferenceEditorPanel extends javax.swing.JPanel implements PropertyChangeListener, ActionListener, ItemListener{

    private IMasterController controller;
    private Reference reference;
    private JDialog container;



    /** Creates new form ReferenceEditorPanel */
    public ReferenceEditorPanel(JDialog container, IMasterController controller, Reference reference) {
        initComponents();
        this.container = container;
        this.controller = controller;
        this.reference = reference;
        setReference(reference);
        chbSource.addActionListener(this);
        chbVisible.addActionListener(this);
        listRelation.addItemListener(this);
        btOk.addActionListener(this);
        btCancel.addActionListener(this);
    }

    public void close() {
        if ( reference != null)
            reference.removePropertyChangeListener(this);
    }

    private void selectListRelation(String s) {
        int i;
        for ( i = 0; i < listRelation.getItemCount(); i++) {
            if ( s.equals(listRelation.getItem(i)))
                break;
        }
        listRelation.select(i);
    }




    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbReferenceName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txLowerBound = new javax.swing.JTextField();
        txUpperBound = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        chbSource = new javax.swing.JCheckBox();
        chbVisible = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        listRelation = new java.awt.Choice();
        btOk = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.jLabel1.text")); // NOI18N

        lbReferenceName.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.lbReferenceName.text")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.jPanel1.border.title"))); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.jLabel4.text")); // NOI18N

        txLowerBound.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.txLowerBound.text")); // NOI18N
        txLowerBound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txLowerBoundActionPerformed(evt);
            }
        });

        txUpperBound.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.txUpperBound.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txLowerBound, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(txUpperBound))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txLowerBound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txUpperBound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.jPanel2.border.title"))); // NOI18N

        chbSource.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.chbSource.text")); // NOI18N

        chbVisible.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.chbVisible.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbSource)
                    .addComponent(chbVisible))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(chbSource)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbVisible))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.jPanel3.border.title"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listRelation, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(listRelation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btOk.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.btOk.text")); // NOI18N

        btCancel.setText(org.openide.util.NbBundle.getMessage(ReferenceEditorPanel.class, "ReferenceEditorPanel.btCancel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbReferenceName, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(btCancel))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbReferenceName))
                .addGap(11, 11, 11)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btOk)
                    .addComponent(btCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txLowerBoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txLowerBoundActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txLowerBoundActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btOk;
    private javax.swing.JCheckBox chbSource;
    private javax.swing.JCheckBox chbVisible;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbReferenceName;
    private java.awt.Choice listRelation;
    private javax.swing.JTextField txLowerBound;
    private javax.swing.JTextField txUpperBound;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the controller
     */
    public IMasterController getController() {
        return controller;
    }

    /**
     * @param controller the controller to set
     */
    public void setController(IMasterController controller) {
        this.controller = controller;
    }

    /**
     * @return the reference
     */
    public Reference getReference() {
        return reference;
    }

    /**
     * @param reference the reference to set
     */
    public void setReference(Reference reference) {
        if ( this.reference != null)
            reference.removePropertyChangeListener(this);

        this.reference = reference;
        reference.addPropertyChangeListener(this);

        lbReferenceName.setText(getReference().getReferenceType().getNameSpace());
        txLowerBound.setText("" + getReference().getLowerBound());
        txUpperBound.setText("" + getReference().getUpperBound());
        chbSource.setSelected(getReference().isSource());
        chbVisible.setSelected(getReference().isVisible());

        listRelation.removeAll();
        for ( Relation rel : getController().getMModel().getModel().getRelations()) {
            listRelation.add(rel.getNameSpace());
        }
        selectListRelation(getReference().getRelation().getNameSpace());
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        setReference(reference);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object source = e.getSource();

        IReferenceManager refM = controller.getReferenceManger();

        if (source == chbSource) {
            if ( !refM.setSource(reference, chbSource.isSelected())) {
                chbSource.setSelected(reference.isSource());
            }
        } else if (source == chbVisible) {
            refM.setVisible(reference, chbVisible.isSelected());
        } else if (source == btOk) {
            try {
                int low = Integer.parseInt(txLowerBound.getText());
                int up = Integer.parseInt(txUpperBound.getText());
                
                if (!refM.setBounds(reference, low, up))
                    throw new NumberFormatException();

                container.dispose();
            } catch (NumberFormatException ex) {
                DialogMessagesManager.showErrorDialog("Bad input data!");
            }
        } else if ( source == btCancel) {
            container.dispose();
        }


    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if ( e.getSource() == listRelation) {
            for ( Relation rel : controller.getMModel().getModel().getRelations()) {
                if ( rel.getNameSpace().equals(listRelation.getSelectedItem())) {
                    controller.getReferenceManger().setRelatoin(reference, rel);
                    break;
                }
            }

        }
    }

}
