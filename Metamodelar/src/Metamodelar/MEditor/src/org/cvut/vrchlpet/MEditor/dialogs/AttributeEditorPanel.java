


package org.cvut.vrchlpet.MEditor.dialogs;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.cvut.vrchlpet.MEditor.controller.IMasterController;
import org.cvut.vrchlpet.MEditor.controller.IAttributeManager;
import org.cvut.vrchlpet.MCore.core.Attribute;
import org.cvut.vrchlpet.MCore.core.MData;
import org.cvut.vrchlpet.MCore.core.Property;

/**
 *
 * Napul generovany, napul implementovany panel editoru atributu
 *
 * @author Vrchlavsky Petr
 * @version 1.0
 */
public class AttributeEditorPanel extends javax.swing.JPanel implements PropertyChangeListener, ActionListener{


    private IMasterController controller;
    private Attribute attribute;
    private JDialog container;



    /** Creates new form AttributeEditorPanel */
    public AttributeEditorPanel(IMasterController controller, Attribute attribute, JDialog container) {
        initComponents();
        this.container = container;
        this.controller = controller;
        setAttribute(attribute);
        
        btChangeName.addActionListener(this);
        btAdd.addActionListener(this);
        btRemove.addActionListener(this);
        btOk.addActionListener(this);
        chbEditable.addActionListener(this);

        for ( MData md : MData.values()) {
            listAvailable.add(md.toString());
        }


    }


    



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbAttName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btAdd = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        listAvailable = new java.awt.List();
        listCurrent = new java.awt.List();
        btOk = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txAttName = new javax.swing.JTextField();
        btChangeName = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txLowerBound = new javax.swing.JTextField();
        chbEditable = new javax.swing.JCheckBox();
        txUpperBound = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.jLabel1.text")); // NOI18N

        lbAttName.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.lbAttName.text")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.jPanel1.border.title"))); // NOI18N

        btAdd.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.btAdd.text")); // NOI18N

        btRemove.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.btRemove.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(listAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btAdd)
                            .addComponent(btRemove)))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(listCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemove))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(listAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))))
                .addContainerGap())
        );

        btOk.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.btOk.text")); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.jPanel3.border.title"))); // NOI18N

        txAttName.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.txAttName.text")); // NOI18N

        btChangeName.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.btChangeName.text")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txAttName, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btChangeName)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txAttName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btChangeName))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.jPanel4.border.title"))); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.jLabel4.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.jLabel5.text")); // NOI18N

        txLowerBound.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.txLowerBound.text")); // NOI18N

        chbEditable.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.chbEditable.text")); // NOI18N

        txUpperBound.setText(org.openide.util.NbBundle.getMessage(AttributeEditorPanel.class, "AttributeEditorPanel.txUpperBound.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(chbEditable)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txUpperBound, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(txLowerBound, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(chbEditable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txUpperBound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txLowerBound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbAttName, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77))
                    .addComponent(btOk, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbAttName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btOk)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btChangeName;
    private javax.swing.JButton btOk;
    private javax.swing.JButton btRemove;
    private javax.swing.JCheckBox chbEditable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lbAttName;
    private java.awt.List listAvailable;
    private java.awt.List listCurrent;
    private javax.swing.JTextField txAttName;
    private javax.swing.JTextField txLowerBound;
    private javax.swing.JTextField txUpperBound;
    // End of variables declaration//GEN-END:variables

    public void close() {
        if ( attribute != null)
            attribute.removePropertyChangeListener(this);
    }


    /**
     * @return the controller
     */
    public IMasterController getController() {
        return controller;
    }

    /**
     * @param controller the controller to set
     */
    public void setController(IMasterController controller) {
        this.controller = controller;
    }

    /**
     * @return the reference
     */
    public Attribute getAttribute() {
        return attribute;
    }

    public void setAttribute(Attribute at) {
        if ( this.attribute != null)
            attribute.removePropertyChangeListener(this);

        this.attribute = at;
        attribute.addPropertyChangeListener(this);

        lbAttName.setText( at.getName());
        txAttName.setText(at.getName());


        chbEditable.setSelected(at.isEditable());
        
        listCurrent.removeAll();
        for ( Property prop : at.getProperties()) {
            listCurrent.add(prop.getName() + ": " + prop.getmData().toString());
        }
        
        txLowerBound.setText("" + at.getLowerBound());
        txUpperBound.setText("" + at.getUpperBound());

    }



    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        setAttribute(attribute);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object source = e.getSource();


        IAttributeManager am = controller.getAttributeManager();

        if ( source == btAdd) {


            if ( listAvailable.getSelectedIndex() == -1) {
                DialogMessagesManager.showErrorDialog("You have to choose the parameter's data type first in Availabel list");
                return;
            }


            String name = JOptionPane.showInputDialog(container, "Choose the name:");
            if ( name == null)
                return;

            name = name.trim();
            if ( name.length() == 0) {
                DialogMessagesManager.showErrorDialog("Bad input data!");
                return;
            }

            if ( !am.addProperty(attribute, name, listAvailable.getSelectedItem()))
                DialogMessagesManager.showErrorDialog("Wrong input!");


        } else if ( source == btChangeName) {
            String name = txAttName.getText().trim();
            
            if ( name.length() == 0 || name.equals("")) {
                DialogMessagesManager.showErrorDialog("Wrong name format!");
                return;
            }
            am.changeName(attribute, txAttName.getText());
        } else if ( source == btOk) {
            
            try {
                int l = Integer.parseInt(txLowerBound.getText());
                int u = Integer.parseInt(txUpperBound.getText());
                
                if ( u >= 0) {
                    if ( u < l) {
                        DialogMessagesManager.showErrorDialog("Upper bound is lower then lower bound!");
                    }
                } else {
                    if ( !( l >= 0)) {
                        DialogMessagesManager.showErrorDialog("Too low lower bound!");
                    }
                }
                
                controller.getStructuralFeatureManager().setBounds(attribute, l,u);
                
            } catch ( NumberFormatException ex) {
                DialogMessagesManager.showErrorDialog(ex.getMessage());
            }
            
            
            close();
            container.dispose();
        } else if ( source == btRemove) {
            if ( listCurrent.getSelectedIndex() == -1) {
                DialogMessagesManager.showErrorDialog("There is no selected property!");
                return;
            }

            Property tmp = null;
            for ( Property prop : attribute.getProperties()) {
                if ( listCurrent.getSelectedItem().startsWith(prop.getName())) {
                    tmp = prop;
                    break;
                }
            }
            
            if ( tmp != null)
                am.removeProperty(attribute, tmp);
        } else if ( source == chbEditable) {
            controller.getStructuralFeatureManager().setEditable(attribute, chbEditable.isSelected());
        }
    }

}
