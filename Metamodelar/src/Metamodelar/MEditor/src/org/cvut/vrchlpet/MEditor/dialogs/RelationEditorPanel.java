
package org.cvut.vrchlpet.MEditor.dialogs;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.cvut.vrchlpet.MEditor.controller.IMasterController;
import org.cvut.vrchlpet.MCore.core.Relation;

/**
 *
 * Napul generovany, napul implementovany panel editoru relace
 *
 * @author Vrchlavsky Petr
 * @version 1.0
 */
public class RelationEditorPanel extends javax.swing.JPanel implements ActionListener, PropertyChangeListener{

    
    
    private IMasterController controller;
    private Relation relation;
    private JDialog container;
    
    
    
    /** Creates new form RelationEditorPanel */
    public RelationEditorPanel(JDialog container, IMasterController controller, Relation relation) {
        initComponents();
        this.container = container;
        this.controller = controller;
        this.relation = relation;
        
        chbContainer.addActionListener(this);
        chbSymmetric.addActionListener(this);
        btChangeDesc.addActionListener(this);
        btOk.addActionListener(this);
        btRename.addActionListener(this);
        relation.addPropertyChangeListener(this);
        fillForm();
    }
    
    public void close() {
        relation.removePropertyChangeListener(this);
    }
    
    private void fillForm() {
        lbName.setText(relation.getNameSpace());
        chbContainer.setSelected(relation.isContainer());
        chbSymmetric.setSelected(relation.isSymmetric());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        chbContainer = new javax.swing.JCheckBox();
        chbSymmetric = new javax.swing.JCheckBox();
        btChangeDesc = new javax.swing.JButton();
        btRename = new javax.swing.JButton();
        btOk = new javax.swing.JButton();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(RelationEditorPanel.class, "RelationEditorPanel.jLabel1.text")); // NOI18N

        lbName.setText(org.openide.util.NbBundle.getMessage(RelationEditorPanel.class, "RelationEditorPanel.lbName.text")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(RelationEditorPanel.class, "RelationEditorPanel.jPanel1.border.title"))); // NOI18N

        chbContainer.setText(org.openide.util.NbBundle.getMessage(RelationEditorPanel.class, "RelationEditorPanel.chbContainer.text")); // NOI18N

        chbSymmetric.setText(org.openide.util.NbBundle.getMessage(RelationEditorPanel.class, "RelationEditorPanel.chbSymmetric.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbContainer)
                    .addComponent(chbSymmetric))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(chbContainer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbSymmetric)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btChangeDesc.setText(org.openide.util.NbBundle.getMessage(RelationEditorPanel.class, "RelationEditorPanel.btChangeDesc.text")); // NOI18N

        btRename.setText(org.openide.util.NbBundle.getMessage(RelationEditorPanel.class, "RelationEditorPanel.btRename.text")); // NOI18N

        btOk.setText(org.openide.util.NbBundle.getMessage(RelationEditorPanel.class, "RelationEditorPanel.btOk.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btChangeDesc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(btRename))
                    .addComponent(btOk, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btChangeDesc)
                    .addComponent(btRename))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btOk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btChangeDesc;
    private javax.swing.JButton btOk;
    private javax.swing.JButton btRename;
    private javax.swing.JCheckBox chbContainer;
    private javax.swing.JCheckBox chbSymmetric;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        Object s = e.getSource();
        
        if ( s == chbContainer) {
            controller.getRelationManager().setContainer(relation, chbContainer.isSelected());
        } else if ( s == chbSymmetric) {
            controller.getRelationManager().setSymetric(relation, chbSymmetric.isSelected());
        } else if ( s == btChangeDesc) {
            String newText = JOptionPane.showInputDialog(container, "Type in new description",relation.getDescription());
            if ( newText != null) {
                controller.getMetaObjectManager().changeDescriptio(relation, newText);
            }
        } else if ( s == btOk) {
            container.dispose();
        } else if ( s == btRename) {
            String newText = JOptionPane.showInputDialog(container, "Type in new namespace", relation.getNameSpace());
            if ( newText != null) {
                if ( !controller.getMetaObjectManager().changeNamespace(relation, newText)) {
                    DialogMessagesManager.showErrorDialog("Bad input data");
                }
            }
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        fillForm();
    }
}
