/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RelationUIPanel.java
 *
 * Created on 16.4.2011, 21:21:05
 */

package org.cvut.vrchlpet.MEditor.dialogs;


import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.cvut.vrchlpet.MCore.core.Relation;
import org.cvut.vrchlpet.MCore.visualization.ArrowShape;
import org.cvut.vrchlpet.MCore.visualization.ConnectionLabel;
import org.cvut.vrchlpet.MCore.visualization.ConnectionLabelPosition;
import org.cvut.vrchlpet.MCore.visualization.ui.RelationUI;

/**
 *
 * @author Vrchli
 */
public class RelationUIPanel extends javax.swing.JPanel implements ActionListener, ItemListener{

    
    private Relation relation;
    private JDialog container;
    
    
    
    /** Creates new form RelationUIPanel */
    public RelationUIPanel(Relation relation, JDialog container) {
        initComponents();
        this.relation = relation;
        this.container = container;
        for ( ArrowShape as : ArrowShape.values()) {
            chSource.add(as.toString());
            chTarget.add(as.toString());
        }
        for ( ConnectionLabelPosition clp : ConnectionLabelPosition.values()) {
            chPosition.add(clp.toString());
        }
        
        fillForm(this.relation);
        
        
        chPosition.addItemListener(this);
        chSource.addItemListener(this);
        chTarget.addItemListener(this);
        chbEditable.addActionListener(this);
        chbMovable.addActionListener(this);
        listCurrent.addItemListener(this);
        btAdd.addActionListener(this);
        btChangeText.addActionListener(this);
        btOk.addActionListener(this);
        btRemove.addActionListener(this);
    }

    public void close() {}
    
    private void fillForm(Relation relation) {
        lbName.setText(relation.getNameSpace());  
        RelationUI relui = (RelationUI)relation.getUi();
        chSource.select(relui.getVisualization().getReferenceSourceArrow().toString());
        chTarget.select(relui.getVisualization().getReferenceTargetArrow().toString());
        for ( ConnectionLabel cl : relui.getVisualization().getLabels()) {
            listCurrent.add(cl.getText());
        }
    }
    
    
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btOk = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        listCurrent = new java.awt.List();
        btAdd = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        chPosition = new java.awt.Choice();
        jLabel3 = new javax.swing.JLabel();
        chbEditable = new javax.swing.JCheckBox();
        chbMovable = new javax.swing.JCheckBox();
        btChangeText = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chSource = new java.awt.Choice();
        jLabel6 = new javax.swing.JLabel();
        chTarget = new java.awt.Choice();
        jLabel4 = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();

        btOk.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.btOk.text")); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.jPanel5.border.title"))); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.jLabel2.text")); // NOI18N

        btAdd.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.btAdd.text")); // NOI18N

        btRemove.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.btRemove.text")); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.jPanel6.border.title"))); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.jLabel3.text")); // NOI18N

        chbEditable.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.chbEditable.text")); // NOI18N

        chbMovable.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.chbMovable.text")); // NOI18N

        btChangeText.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.btChangeText.text")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbMovable)
                    .addComponent(chPosition, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(chbEditable)
                    .addComponent(jLabel3)
                    .addComponent(btChangeText))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbEditable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chbMovable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btChangeText)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(99, 99, 99))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(btAdd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btRemove)))
                    .addComponent(listCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btRemove)
                            .addComponent(btAdd)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.jLabel1.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.jLabel6.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(chSource, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(chTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.jLabel4.text")); // NOI18N

        lbName.setText(org.openide.util.NbBundle.getMessage(RelationUIPanel.class, "RelationUIPanel.lbName.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(321, Short.MAX_VALUE)
                        .addComponent(btOk)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btOk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btChangeText;
    private javax.swing.JButton btOk;
    private javax.swing.JButton btRemove;
    private java.awt.Choice chPosition;
    private java.awt.Choice chSource;
    private java.awt.Choice chTarget;
    private javax.swing.JCheckBox chbEditable;
    private javax.swing.JCheckBox chbMovable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lbName;
    private java.awt.List listCurrent;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        Object source = e.getSource();
        if ( source == btAdd) {
            String text = JOptionPane.showInputDialog(this, "Type in the text of the label:", "");
            if ( text != null) {
                ConnectionLabel l = new ConnectionLabel();
                l.setText(text);
                ((RelationUI)relation.getUi()).getVisualization().getLabels().add(l);
                listCurrent.add(l.getText());
            }
        } else if ( source == btChangeText) {
            int index = listCurrent.getSelectedIndex();
            if ( index == -1) {
                DialogMessagesManager.showErrorDialog("Select the lable first");
                return;
            }

            ConnectionLabel l = ((RelationUI)relation.getUi()).getVisualization().getLabels().get(index);
            String s = JOptionPane.showInputDialog(this, "Type in the text of the label",l.getText());
            if ( s == null)
                return;

            l.setText(s);
            listCurrent.replaceItem(l.getText(), index);
        } else if ( source == btOk) {
            container.dispose();
        } else if ( source == btRemove) {
            int index = listCurrent.getSelectedIndex();
            if ( index == -1) {
                DialogMessagesManager.showErrorDialog("Select the lable first");
                return;
            }

            ConnectionLabel l = ((RelationUI)relation.getUi()).getVisualization().getLabels().get(index);
            ((RelationUI)relation.getUi()).getVisualization().getLabels().remove(l);
            listCurrent.remove(index);
            listCurrent.select(-1);
        } else if ( source == chbEditable) {
            int index = listCurrent.getSelectedIndex();
            if ( index == -1) {
                DialogMessagesManager.showErrorDialog("Select the lable first");
                return;
            }

            ConnectionLabel l = ((RelationUI)relation.getUi()).getVisualization().getLabels().get(index);
            l.setEditable(chbEditable.isSelected());
        } else if ( source == chbMovable) {
            int index = listCurrent.getSelectedIndex();
            if ( index == -1) {
                DialogMessagesManager.showErrorDialog("Select the lable first");
                return;
            }

            ConnectionLabel l = ((RelationUI)relation.getUi()).getVisualization().getLabels().get(index);
            l.setMovable(chbMovable.isSelected());
        }
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        Object source = e.getSource();
        
        if ( source == chPosition) {
            int index = listCurrent.getSelectedIndex();
            if ( index == -1) {
                DialogMessagesManager.showErrorDialog("Select the lable first");
                return;
            }

            ConnectionLabel l = ((RelationUI)relation.getUi()).getVisualization().getLabels().get(index);
            l.setConnectionLabelPosition(ConnectionLabelPosition.valueOf(chPosition.getSelectedItem()));
        } else if ( source == chSource) {
            ArrowShape s = ArrowShape.valueOf(chSource.getSelectedItem());
            RelationUI rui = ((RelationUI)relation.getUi());
            rui.getVisualization().setReferenceSourceArrow(s);
        } else if ( source == chTarget) {
            ArrowShape s = ArrowShape.valueOf(chTarget.getSelectedItem());
            RelationUI rui = ((RelationUI)relation.getUi());
            rui.getVisualization().setReferenceTargetArrow(s);
        } else if ( source == listCurrent) {
            int index = listCurrent.getSelectedIndex();
            ConnectionLabel l = ((RelationUI)relation.getUi()).getVisualization().getLabels().get(index);
            chPosition.select(l.getConnectionLabelPosition().toString());
            chbEditable.setSelected(l.isEditable());
            chbMovable.setSelected(l.isMovable());
        }
    }

}
